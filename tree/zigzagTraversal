#include <bits/stdc++.h>
using namespace std;
class TreeNode
{
public:
    int val;
    TreeNode *left;
    TreeNode *right;

public:
    TreeNode(int val1)
    {
        val = val1;
        left = NULL;
        right = NULL;
    }
};

vector<vector<int>> zigzagLevelOrder(TreeNode *root)
{
    vector<vector<int>> ans;
    if (root == NULL)
        return ans;

    queue<TreeNode *> q;
    q.push(root);
    bool leftToRight = 1;
    while (!q.empty())
    {
        int size = q.size();
        vector<int> levelOrder(size);
        for (int i = 0; i < size; i++)
        {
            TreeNode *node = q.front();
            q.pop();

            int index = (leftToRight) ? i : size - 1 - i;
            levelOrder[index] = node->val;

            if (node->left != NULL)
                q.push(node->left);
            if (node->right != NULL)
                q.push(node->right);
        }
        leftToRight = !leftToRight;
        ans.push_back(levelOrder);
    }
    return ans;
}
